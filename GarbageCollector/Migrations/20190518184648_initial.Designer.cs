// <auto-generated />
using System;
using GarbageCollector.Database.Dbos;
using GeoAPI.Geometries;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace GarbageCollector.Migrations
{
    [DbContext(typeof(GarbageCollectorContext))]
    [Migration("20190518184648_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("GarbageCollector.Database.Dbos.GarbageAppUserDbo", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<Guid>("CurrentLocationId");

                    b.Property<string>("Login");

                    b.HasKey("Id");

                    b.HasIndex("CurrentLocationId");

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("GarbageCollector.Database.Dbos.LocationDbo", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<string>("Address");

                    b.Property<IPoint>("Coordinates");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("GarbageCollector.Database.Dbos.TrashCanDbo", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<Guid>("UserId");

                    b.Property<Guid>("WasteTakePointId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("WasteTakePointId");

                    b.ToTable("TrashCanDbo");
                });

            modelBuilder.Entity("GarbageCollector.Database.Dbos.TrashCanToCategoryLinkDbo", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<Guid>("CategoryId");

                    b.Property<Guid>("TrashCanId");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("TrashCanId");

                    b.ToTable("TrashCanToCategoryLinkDbo");
                });

            modelBuilder.Entity("GarbageCollector.Database.Dbos.WasteCategoryDbo", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<int>("Material");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("WasteCategories");
                });

            modelBuilder.Entity("GarbageCollector.Database.Dbos.WasteTakePointDbo", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<Guid?>("LocationId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("WasteTakePoints");
                });

            modelBuilder.Entity("GarbageCollector.Database.Dbos.WasteTakePointToCategoryLinkDbo", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<Guid>("CategoryId");

                    b.Property<Guid>("WasteTakePointId");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("WasteTakePointId");

                    b.ToTable("WasteTakePointToCategoryLinkDbo");
                });

            modelBuilder.Entity("GarbageCollector.Database.Dbos.GarbageAppUserDbo", b =>
                {
                    b.HasOne("GarbageCollector.Database.Dbos.LocationDbo", "CurrentLocation")
                        .WithMany()
                        .HasForeignKey("CurrentLocationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GarbageCollector.Database.Dbos.TrashCanDbo", b =>
                {
                    b.HasOne("GarbageCollector.Database.Dbos.GarbageAppUserDbo", "User")
                        .WithMany("TrashCans")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GarbageCollector.Database.Dbos.WasteTakePointDbo", "WasteTakePoint")
                        .WithMany()
                        .HasForeignKey("WasteTakePointId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GarbageCollector.Database.Dbos.TrashCanToCategoryLinkDbo", b =>
                {
                    b.HasOne("GarbageCollector.Database.Dbos.WasteCategoryDbo", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GarbageCollector.Database.Dbos.TrashCanDbo", "TrashCan")
                        .WithMany("LinksToCategories")
                        .HasForeignKey("TrashCanId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GarbageCollector.Database.Dbos.WasteTakePointDbo", b =>
                {
                    b.HasOne("GarbageCollector.Database.Dbos.LocationDbo", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");
                });

            modelBuilder.Entity("GarbageCollector.Database.Dbos.WasteTakePointToCategoryLinkDbo", b =>
                {
                    b.HasOne("GarbageCollector.Database.Dbos.WasteCategoryDbo", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GarbageCollector.Database.Dbos.WasteTakePointDbo", "WasteTakePoint")
                        .WithMany("LinksToCategories")
                        .HasForeignKey("WasteTakePointId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
